stages:
  - docker
  - build
  - test
  - deploy

variables:
  BUILD_IMAGE: "$CI_REGISTRY_IMAGE:ci-master-2024-08-26"
  GIT_CLEAN_FLAGS: "-ffdxq"

build-image:
  stage: docker
  image: docker
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
    - if docker manifest inspect "$BUILD_IMAGE"; then echo "Image already exists!"; exit 0; fi
    - docker build --force-rm -t "$BUILD_IMAGE" - < misc/Dockerfile
    - docker push "$BUILD_IMAGE"
    - docker rmi "$BUILD_IMAGE"
  tags:
    - large

.docker_template:
  image: "$BUILD_IMAGE"
  tags:
    - medium

build-minimal:
  stage: build
  script:
    - opam switch minimal
    - eval `opam env`
    - autoconf
    - ./configure
    - ./remake -j2 all check
  extends: .docker_template

build-full:
  stage: build
  script:
    - opam switch full
    - eval `opam env`
    - autoconf
    - ./configure
    - ./remake -j2 all check
  extends: .docker_template

build-latest:
  stage: build
  script:
    - opam switch latest
    - eval `opam env`
    - autoconf
    - ./configure
    - ./remake -j2 all check
  extends: .docker_template

.opam_template:
  stage: test
  script:
    - opam pin -y -n add coq-interval .
    - opam install -v coq-interval
  extends: .docker_template

opam-minimal:
  before_script:
    - opam switch minimal
  extends: .opam_template

opam-full:
  before_script:
    - opam switch full
  extends: .opam_template

opam-latest:
  before_script:
    - opam switch latest
  extends: .opam_template

pages:
  stage: deploy
  script:
    - opam switch latest
    - eval `opam env`
    - autoconf
    - ./configure
    - ./remake -j2 public
  artifacts:
    paths:
    - public
  only:
    - master
  extends: .docker_template
